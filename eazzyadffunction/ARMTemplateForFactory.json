{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "eazzyadffunction"
		},
		"LS_Practice2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_Practice2'"
		},
		"Ls_sqlTable_Source_Copy_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Ls_sqlTable_Source_Copy'"
		},
		"dessert4alldedpool_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dessert4alldedpool'"
		},
		"ds_incremental_copy_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ds_incremental_copy'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"ls_Dessert4all_Practice2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_Dessert4all_Practice2'"
		},
		"ls_ForEach_csv_files_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_ForEach_csv_files'"
		},
		"ls_Practice_DF_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_Practice_DF'"
		},
		"ls_Project9_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_Project9_ADLS'"
		},
		"ls_SqlDatabase_copy_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_SqlDatabase_copy'"
		},
		"ls_Zipped_Folder_Practice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_Zipped_Folder_Practice'"
		},
		"ls_adls_adf_copy_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_adf_copy'"
		},
		"ls_csv_sink_files_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_csv_sink_files'"
		},
		"ls_dessert4all_synapse_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_dessert4all_synapse'"
		},
		"ls_for_DataFlow_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_for_DataFlow'"
		},
		"ls_for_metadata_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_for_metadata'"
		},
		"ls_lookup_sql_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_lookup_sql'"
		},
		"ls_metadata_sqldb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_metadata_sqldb'"
		},
		"ls_project9_1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_project9_1'"
		},
		"ls_sink_sqlTable_DF_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sink_sqlTable_DF'"
		},
		"ls_sink_sqlTables_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sink_sqlTables'"
		},
		"ls_sqlTable_DataFlow_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sqlTable_DataFlow'"
		},
		"LS_Practice2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://eazzystrgacc.dfs.core.windows.net/"
		},
		"Ls_sqlTable_Source_Copy_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "eazzyfunctionserver.database.windows.net"
		},
		"Ls_sqlTable_Source_Copy_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "eazzyfunctiondb"
		},
		"Ls_sqlTable_Source_Copy_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "eazzysquawsh"
		},
		"ds_incremental_copy_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://eazzystrgacc.dfs.core.windows.net/"
		},
		"ls_Dessert4all_Practice2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "project9workspace.sql.azuresynapse.net"
		},
		"ls_Dessert4all_Practice2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "desert4alldedpool"
		},
		"ls_Dessert4all_Practice2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladminuser"
		},
		"ls_ForEach_csv_files_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://eazzystrgacc.dfs.core.windows.net/"
		},
		"ls_Practice_DF_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://eazzystrgacc.dfs.core.windows.net/"
		},
		"ls_Project9_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://eazzystrgacc.dfs.core.windows.net/"
		},
		"ls_SqlDatabase_copy_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "eazzysquawsh.database.windows.net"
		},
		"ls_SqlDatabase_copy_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "eazzybtcdb"
		},
		"ls_SqlDatabase_copy_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "eazzysquawsh"
		},
		"ls_Zipped_Folder_Practice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://eazzystrgacc.dfs.core.windows.net/"
		},
		"ls_adls_adf_copy_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://eazzystrgacc.dfs.core.windows.net/"
		},
		"ls_csv_sink_files_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://eazzystrgacc.dfs.core.windows.net/"
		},
		"ls_dessert4all_synapse_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "project9workspace.sql.azuresynapse.net"
		},
		"ls_dessert4all_synapse_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "desert4alldedpool"
		},
		"ls_dessert4all_synapse_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "eazzysquawsh"
		},
		"ls_for_DataFlow_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://eazzystrgacc.dfs.core.windows.net/"
		},
		"ls_for_metadata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://eazzystrgacc.dfs.core.windows.net/"
		},
		"ls_lookup_sql_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "eazzyfunctionserver.database.windows.net"
		},
		"ls_lookup_sql_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "eazzyfunctiondb"
		},
		"ls_lookup_sql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "eazzysquawsh"
		},
		"ls_metadata_sqldb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "eazzyfunctionserver.database.windows.net"
		},
		"ls_metadata_sqldb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "eazzyfunctiondb"
		},
		"ls_metadata_sqldb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "eazzysquawsh"
		},
		"ls_project9_1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://project8strg.dfs.core.windows.net/"
		},
		"ls_sink_sqlTable_DF_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "eazzyfunctionserver.database.windows.net"
		},
		"ls_sink_sqlTable_DF_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "eazzyfunctiondb"
		},
		"ls_sink_sqlTable_DF_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "eazzysquawsh"
		},
		"ls_sink_sqlTables_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "eazzyfunctionserver.database.windows.net"
		},
		"ls_sink_sqlTables_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "eazzyfunctiondb"
		},
		"ls_sink_sqlTables_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "eazzysquawsh"
		},
		"ls_sqlTable_DataFlow_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "eazzyfunctionserver.database.windows.net"
		},
		"ls_sqlTable_DataFlow_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "eazzyfunctiondb"
		},
		"ls_sqlTable_DataFlow_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "eazzysquawsh"
		},
		"Project9_Trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/c74fd3b2-fc1c-4d03-badb-4ef74f0ff6ce/resourceGroups/eazzyRG/providers/Microsoft.Storage/storageAccounts/project8strg"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Aggregate_Sales_To_Gold')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Silver_to_Gold",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Aggregate_Sales_To_Gold",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SilvertoGold": {},
									"Gold": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "ls_project9_1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "loggingfolderpathcontainer"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Aggregate_Sales_To_Gold')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_metadata_incemental_copy",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_incremental_copy",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "For_Each_Data_Incremental_File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_metadata_incemental_copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_metadata_incemental_copy').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get_Metadata_For_Each_Dynamic",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_metadata_incremental_Parameter",
											"type": "DatasetReference",
											"parameters": {
												"Filename": {
													"value": "@item().Name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If_Condition_variables_GetMetadata",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get_Metadata_For_Each_Dynamic",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Get_Metadata_For_Each_Dynamic').output.lastModified,variables('PreviousFile'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set_variable_IF_Condition",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "CurrentFile",
													"value": {
														"value": "@activity('Get_Metadata_For_Each_Dynamic').output.itemName",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set_variable_IF_Condition2",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Set_variable_IF_Condition",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "PreviousFile",
													"value": {
														"value": "@activity('Get_Metadata_For_Each_Dynamic').output.lastModified",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Copy_Data_Incremental_Files_1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "If_Condition_variables_GetMetadata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_metadata_incremental_Parameter",
											"type": "DatasetReference",
											"parameters": {
												"Filename": {
													"value": "@variables('CurrentFile')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_incremental_copy_Staging",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CurrentFile": {
						"type": "String"
					},
					"PreviousFile": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Incremental_csv_Files"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_incremental_copy')]",
				"[concat(variables('factoryId'), '/datasets/ds_metadata_incremental_Parameter')]",
				"[concat(variables('factoryId'), '/datasets/ds_incremental_copy_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_Sales_To_Bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "landing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "ls_project9_1",
										"type": "LinkedServiceReference"
									},
									"path": "loggingfolderpathcontainer"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_project9_dlt",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_project9_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transform_Sales_To_Silver",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "landing",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Transform_Sales_To_Silver",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Aggregate_Sales_To_Gold",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform_Sales_To_Silver",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Aggregate_Sales_To_Gold",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T23:34:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_project9_dlt')]",
				"[concat(variables('factoryId'), '/datasets/ds_project9_parquet')]",
				"[concat(variables('factoryId'), '/pipelines/Transform_Sales_To_Silver')]",
				"[concat(variables('factoryId'), '/pipelines/Aggregate_Sales_To_Gold')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_Sales_practice2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Landing_practice2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "ls_project9_1",
										"type": "LinkedServiceReference"
									},
									"path": "gold"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_project9_dlt",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_parquet_project9",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ppl_Aggregate_Sales_To_Gold_Practice2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform_Sales_To_Silver",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ppl_Aggregate_Sales_To_Gold_Practice2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Transform_Sales_To_Silver",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Landing_practice2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Transform_Sales_To_Silver",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_project9_dlt')]",
				"[concat(variables('factoryId'), '/datasets/ds_parquet_project9')]",
				"[concat(variables('factoryId'), '/pipelines/ppl_Aggregate_Sales_To_Gold_Practice2')]",
				"[concat(variables('factoryId'), '/pipelines/Transform_Sales_To_Silver')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Transform_Sales_To_Silver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Bronze to Silver",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Transform_Sales_To_Silver",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"bronzesource": {},
									"Dessert4allSilverSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Transform_Sales_To_Silver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ppl_Aggregate_Sales_To_Gold_Practice2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Silver_Copydata_To_Gold",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "ls_project9_1",
									"type": "LinkedServiceReference"
								},
								"path": "gold"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_TotalRev_Synapse_Practice2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_TotalRev_Synapse_Practice2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_TotalRev_Synapse_Practice2')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ppl_For_Each_Lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1_Practice",
						"type": "GetMetadata",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_for_csvfile_metadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Lookup_Practice",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT *\nFROM eazzyfunctiondb.information_schema.tables\nWHERE Table_Schema = 'SalesLT' AND Table_Type = 'base table'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lookup_practice",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Practice",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Practice').output",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_SqlTable_copy_soruce",
											"type": "DatasetReference",
											"parameters": {
												"SalesLT_sql_Table": {
													"value": "@item().Table_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_csv_sink_files",
											"type": "DatasetReference",
											"parameters": {
												"SalesLT_csv_files": {
													"value": "@item().Table_Name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-16T10:21:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_for_csvfile_metadata')]",
				"[concat(variables('factoryId'), '/datasets/lookup_practice')]",
				"[concat(variables('factoryId'), '/datasets/ds_SqlTable_copy_soruce')]",
				"[concat(variables('factoryId'), '/datasets/ds_csv_sink_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ppl_for_data_flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ppl_Data _flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_xlsx_to_sqlTbl",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"JollyGoodxlsx": {},
									"CurrencyConversionToDollars": {},
									"SinkTosqlTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-13T15:05:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_xlsx_to_sqlTbl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ppl_for_multiple_csvfiles_to_sql_Tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata_4_csvfiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_for_csvfile_metadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"exists",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach_csv_to_sqlTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata_4_csvfiles",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_4_csvfiles').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_multiple_csvfiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_csv_copy",
											"type": "DatasetReference",
											"parameters": {
												"Sales_csv_file": {
													"value": "@item().Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sqlTables",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@concat('SalesLT.csv',item().name)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-15T17:37:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_for_csvfile_metadata')]",
				"[concat(variables('factoryId'), '/datasets/ds_csv_copy')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqlTables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ppl_incremental_copy_practice2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata NBN",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_NBN_MD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach_Metadata_NBN",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata NBN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata NBN').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata_NBN_Para",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_NBN_Parameterized",
											"type": "DatasetReference",
											"parameters": {
												"ItenMane(NBN)": {
													"value": "@item().Name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Incremental_csv_Files"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_NBN_MD')]",
				"[concat(variables('factoryId'), '/datasets/DS_NBN_Parameterized')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ppl_sqlTable_Function')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SalesLT_Files_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT *\nFROM eazzyfunctiondb.information_schema.tables\nWHERE Table_Schema = 'SalesLT' AND Table_Type = 'base table'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_lookup",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_SalesLT_Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SalesLT_Files_Lookup",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SalesLT_Files_Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_SalesLT_sqlTables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_4each_Table",
											"type": "DatasetReference",
											"parameters": {
												"SalesLT_Table": {
													"value": "@item().Table_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_csv_copy",
											"type": "DatasetReference",
											"parameters": {
												"Sales_csv_file": {
													"value": "@item().Table_Name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-08T22:39:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_4each_Table')]",
				"[concat(variables('factoryId'), '/datasets/ds_csv_copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ppl_sqlTable_copy_to_csvfiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_sqlTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT *\nFROM eazzyfunctiondb.information_schema.tables\nWHERE Table_Schema = 'SalesLT' AND Table_Type = 'base table'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_lookup",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_sqlTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_sqlTables",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_sqlTables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_sqlTable_to _csv_folder",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_SqlTable_copy_soruce",
											"type": "DatasetReference",
											"parameters": {
												"SalesLT_sql_Table": {
													"value": "@item().Table_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_csv_sink_files",
											"type": "DatasetReference",
											"parameters": {
												"SalesLT_csv_files": {
													"value": "@item().Table_Name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-16T10:21:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_SqlTable_copy_soruce')]",
				"[concat(variables('factoryId'), '/datasets/ds_csv_sink_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ds_Practice_xlsx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_for_DataFlow",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SALES",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sales Apr-Sep 2020.xlsx",
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/JollyGood",
						"fileSystem": "bcdataengrgcontainer"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Currency",
						"type": "String"
					},
					{
						"name": "Units Sold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_for_DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_practice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ForEach_csv_files",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SweetTreat": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/SweetTreats",
						"fileSystem": "bcdataengrgcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesValueUSD",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ForEach_csv_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SweetTreatPractice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sink_sqlTable_DF",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SweetTreat": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().SweetTreat",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sink_sqlTable_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_4each_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_lookup_sql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SalesLT_Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": {
						"value": "@dataset().SalesLT_Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lookup_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_DataFlow_sqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqlTable_DataFlow",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales_LOAD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqlTable_DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Gold')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dessert4alldedpool",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "Total Revenue",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Silver_to_Gold"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dessert4alldedpool')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_NBN_MD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Practice2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/NaughtyButNice",
						"fileSystem": "bcdataengrgcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesValueUSD",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Practice2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Parquet_project9_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_project9_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Cleaned_Dessert4all.parquet",
						"fileSystem": "silver"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Practice_ExchangeRate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Practice_DF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ExchangeRates.xlsx",
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData",
						"fileSystem": "bcdataengrgcontainer"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "FromCurrency",
						"type": "String"
					},
					{
						"name": "ToCurrency",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "ExchangeRate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Practice_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Sales_To_Silver_Parquet_Practice2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_project9_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Dessert4all.parquet",
						"fileSystem": "bronz"
					},
					"compressionCodec": "none"
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "UTF8"
					},
					{
						"name": "Retailer",
						"type": "UTF8"
					},
					{
						"name": "Product",
						"type": "UTF8"
					},
					{
						"name": "SalesValueUSD",
						"type": "UTF8"
					},
					{
						"name": "UnitsSold",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Silver_To_Gold_Parquet_Practice2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_project9_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "DATE"
					},
					{
						"name": "Retailer",
						"type": "UTF8"
					},
					{
						"name": "Product",
						"type": "UTF8"
					},
					{
						"name": "SalesValueUSD",
						"type": "DOUBLE"
					},
					{
						"name": "UnitsSold",
						"type": "INT32"
					},
					{
						"name": "Revenue",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Sink_DF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sink_sqlTable_DF",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales_LOAD_New"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sink_sqlTable_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Sink_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqlTable_DataFlow",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales_LOAD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqlTable_DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Sink_to_sqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sink_sqlTable_DF",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales_LOAD_New"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sink_sqlTable_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_SqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SqlDatabase_copy",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RowId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Retailer",
						"type": "nvarchar"
					},
					{
						"name": "SalesMonth",
						"type": "date"
					},
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "ManufacturerProductCode",
						"type": "nvarchar"
					},
					{
						"name": "SalesValueUSD",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "UnitsSold",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales_LOAD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SqlDatabase_copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_SqlTable_copy_soruce')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_sqlTable_Source_Copy",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SalesLT_sql_Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": {
						"value": "@dataset().SalesLT_sql_Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_sqlTable_Source_Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_TotalRev_Synapse_Practice2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Dessert4all_Practice2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "Revenue",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dessert4allPractice2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Dessert4all_Practice2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_column_add')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_adf_copy",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/SweetTreats",
						"fileSystem": "bcdataengrgcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesValueUSD",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_adf_copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_csv_copy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ForEach_csv_files",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Sales_csv_file": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Sales_csv_file",
							"type": "Expression"
						},
						"folderPath": "csv_files_adf_copy",
						"fileSystem": "adffunctionscontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ForEach_csv_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_csv_practice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_csv_sink_files",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SalesLT_New": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().SalesLT_New",
							"type": "Expression"
						},
						"folderPath": "csv_files_practice",
						"fileSystem": "adffunctionscontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_csv_sink_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_csv_sink_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_csv_sink_files",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SalesLT_csv_files": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().SalesLT_csv_files",
							"type": "Expression"
						},
						"folderPath": "csv_files_adf_function1",
						"fileSystem": "adffunctionscontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_csv_sink_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_for_csvfile_metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_for_metadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csv_files_adf_function1",
						"fileSystem": "adffunctionscontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_for_metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_from_silver_Dessrt4all')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_project9_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Cleaned_Dessert4all.parquet",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "DATE"
					},
					{
						"name": "Retailer",
						"type": "UTF8"
					},
					{
						"name": "Product",
						"type": "UTF8"
					},
					{
						"name": "SalesValueUSD",
						"type": "DOUBLE"
					},
					{
						"name": "UnitsSold",
						"type": "INT32"
					},
					{
						"name": "Revenue",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_incremental_copy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ds_incremental_copy",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/Desserts4All",
						"fileSystem": "bcdataengrgcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesValueUSD",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ds_incremental_copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_incremental_copy_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ds_incremental_copy",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Incremental_Copy",
						"fileSystem": "bcdataengrgcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ds_incremental_copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_lookup_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lookup_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_metadata_dessert4all_practice2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ds_incremental_copy",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/Desserts4All",
						"fileSystem": "bcdataengrgcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesValueUSD",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ds_incremental_copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_metadata_incremental_Parameter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ds_incremental_copy",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/Desserts4All",
						"fileSystem": "bcdataengrgcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesValueUSD",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ds_incremental_copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parquet_project9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_project9_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Dessert4all.parquet",
						"fileSystem": "bronz"
					},
					"compressionCodec": "none"
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "UTF8"
					},
					{
						"name": "Retailer",
						"type": "UTF8"
					},
					{
						"name": "Product",
						"type": "UTF8"
					},
					{
						"name": "SalesValueUSD",
						"type": "UTF8"
					},
					{
						"name": "UnitsSold",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_project9_dlt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_project9_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_project9_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_project9_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Dessert4all.parquet",
						"fileSystem": "bronz"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_parquet_project9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_project9_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "silver"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_to_gold')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_project9_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Cleaned_Dessert4all.parquet",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "DATE"
					},
					{
						"name": "Retailer",
						"type": "UTF8"
					},
					{
						"name": "Product",
						"type": "UTF8"
					},
					{
						"name": "SalesValueUSD",
						"type": "DOUBLE"
					},
					{
						"name": "UnitsSold",
						"type": "INT32"
					},
					{
						"name": "Revenue",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_project9_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlTable_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqlTable_DataFlow",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DATE",
						"type": "date"
					},
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "UnitSold",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesValueUSD",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "ExchangeRate",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales_LOAD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqlTable_DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlTables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sink_sqlTables",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sink_sqlTables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_parameterized')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_sqlTable_Source_Copy",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SalesLT_New": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().SalesLT_New",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_sqlTable_Source_Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_xlsx_Currency_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_for_DataFlow",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ExchangeRates.xlsx",
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData",
						"fileSystem": "bcdataengrgcontainer"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "FromCurrency",
						"type": "String"
					},
					{
						"name": "ToCurrency",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "ExchangeRate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_for_DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_xlsx_Source_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_for_DataFlow",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS-Folder"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SALES",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sales Apr-Sep 2020.xlsx",
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/JollyGood",
						"fileSystem": "bcdataengrgcontainer"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Currency",
						"type": "String"
					},
					{
						"name": "Units Sold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_for_DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_practice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_lookup_sql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lookup_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_df_practice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sink_sqlTable_DF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "CurrencyConverter"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sink_sqlTable_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Practice2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_Practice2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_Practice2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_sqlTable_Source_Copy')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Ls_sqlTable_Source_Copy_properties_typeProperties_server')]",
					"database": "[parameters('Ls_sqlTable_Source_Copy_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('Ls_sqlTable_Source_Copy_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Ls_sqlTable_Source_Copy_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dessert4alldedpool')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('dessert4alldedpool_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_incremental_copy')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ds_incremental_copy_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ds_incremental_copy_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_Dessert4all_Practice2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('ls_Dessert4all_Practice2_properties_typeProperties_server')]",
					"database": "[parameters('ls_Dessert4all_Practice2_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_Dessert4all_Practice2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_Dessert4all_Practice2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ForEach_csv_files')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_ForEach_csv_files_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_ForEach_csv_files_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_Practice_DF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_Practice_DF_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_Practice_DF_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_Project9_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_Project9_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_Project9_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_SqlDatabase_copy')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_SqlDatabase_copy_properties_typeProperties_server')]",
					"database": "[parameters('ls_SqlDatabase_copy_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_SqlDatabase_copy_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_SqlDatabase_copy_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_Zipped_Folder_Practice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_Zipped_Folder_Practice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_Zipped_Folder_Practice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_adf_copy')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_adf_copy_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_adf_copy_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_csv_sink_files')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_csv_sink_files_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_csv_sink_files_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_dessert4all_synapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('ls_dessert4all_synapse_properties_typeProperties_server')]",
					"database": "[parameters('ls_dessert4all_synapse_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_dessert4all_synapse_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_dessert4all_synapse_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_for_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_for_DataFlow_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_for_DataFlow_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_for_metadata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_for_metadata_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_for_metadata_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_lookup_sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_lookup_sql_properties_typeProperties_server')]",
					"database": "[parameters('ls_lookup_sql_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_lookup_sql_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_lookup_sql_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_metadata_sqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_metadata_sqldb_properties_typeProperties_server')]",
					"database": "[parameters('ls_metadata_sqldb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_metadata_sqldb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_metadata_sqldb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_project9_1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_project9_1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_project9_1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sink_sqlTable_DF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sink_sqlTable_DF_properties_typeProperties_server')]",
					"database": "[parameters('ls_sink_sqlTable_DF_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sink_sqlTable_DF_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sink_sqlTable_DF_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sink_sqlTables')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sink_sqlTables_properties_typeProperties_server')]",
					"database": "[parameters('ls_sink_sqlTables_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sink_sqlTables_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sink_sqlTables_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqlTable_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sqlTable_DataFlow_properties_typeProperties_server')]",
					"database": "[parameters('ls_sqlTable_DataFlow_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sqlTable_DataFlow_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sqlTable_DataFlow_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Project9_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Ingest_Sales_To_Bronze",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Ingest_Sales_practice2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/landing/blobs/",
					"blobPathEndsWith": "20.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Project9_Trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Ingest_Sales_To_Bronze')]",
				"[concat(variables('factoryId'), '/pipelines/Ingest_Sales_practice2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tr_Name_Schedule')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger to Runn JellyGoodPipeline",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ppl_for_data_flow",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2025-07-12T01:50:00",
						"timeZone": "Central Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ppl_for_data_flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Aggregate_Sales_To_Gold')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_silver_to_gold",
								"type": "DatasetReference"
							},
							"name": "SilvertoGold"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_Gold",
								"type": "DatasetReference"
							},
							"name": "Gold"
						}
					],
					"transformations": [
						{
							"name": "DessertSilvertoGold",
							"description": "Total revenue per CustomerID"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesMonth as date,",
						"          Retailer as string,",
						"          Product as string,",
						"          SalesValueUSD as double,",
						"          UnitsSold as integer,",
						"          Revenue as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> SilvertoGold",
						"SilvertoGold aggregate(groupBy(Product),",
						"     TotalRevenue = sum(Revenue)) ~> DessertSilvertoGold",
						"DessertSilvertoGold sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Product as string,",
						"          {Total Revenue} as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> Gold"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_silver_to_gold')]",
				"[concat(variables('factoryId'), '/datasets/ds_Gold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Transform_Sales_To_Silver')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_parquet_project9",
								"type": "DatasetReference"
							},
							"name": "bronzesource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_Parquet_project9_sink",
								"type": "DatasetReference"
							},
							"name": "Dessert4allSilverSink"
						}
					],
					"transformations": [
						{
							"name": "Dessert4allderivedColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesMonth as date,",
						"          Retailer as string,",
						"          Product as string,",
						"          SalesValueUSD as double,",
						"          UnitsSold as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> bronzesource",
						"bronzesource derive(Revenue = SalesValueUSD*UnitsSold) ~> Dessert4allderivedColumn",
						"Dessert4allderivedColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['Cleaned_Dessert4all.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> Dessert4allSilverSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_parquet_project9')]",
				"[concat(variables('factoryId'), '/datasets/ds_Parquet_project9_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_Silver to Gold_Aggregations_Practice2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_Silver_To_Gold_Parquet_Practice2",
								"type": "DatasetReference"
							},
							"name": "SilverToGold"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_TotalRev_Synapse_Practice2",
								"type": "DatasetReference"
							},
							"name": "SilverToGoldPractice2"
						}
					],
					"transformations": [
						{
							"name": "TotalrevenueperCustomerIDPractice2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesMonth as date,",
						"          Retailer as string,",
						"          Product as string,",
						"          SalesValueUSD as double,",
						"          UnitsSold as integer,",
						"          Revenue as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> SilverToGold",
						"SilverToGold aggregate(groupBy(Product),",
						"     Revenue = sum(Revenue)) ~> TotalrevenueperCustomerIDPractice2",
						"TotalrevenueperCustomerIDPractice2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Product as string,",
						"          Revenue as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SilverToGoldPractice2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Silver_To_Gold_Parquet_Practice2')]",
				"[concat(variables('factoryId'), '/datasets/ds_TotalRev_Synapse_Practice2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_Transform_Sales_To_Silver_Practice2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_Sales_To_Silver_Parquet_Practice2",
								"type": "DatasetReference"
							},
							"name": "TransformSalesToSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_Sales_To_Silver_Parquet_Practice2",
								"type": "DatasetReference"
							},
							"name": "SinkSilerderivedColumnpractice2"
						}
					],
					"transformations": [
						{
							"name": "SilerderivedColumnpractice2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesMonth as string,",
						"          Retailer as string,",
						"          Product as string,",
						"          SalesValueUSD as double,",
						"          UnitsSold as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> TransformSalesToSilver",
						"TransformSalesToSilver derive(Revenue = SalesValueUSD*UnitsSold) ~> SilerderivedColumnpractice2",
						"SilerderivedColumnpractice2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SalesMonth as string,",
						"          Retailer as string,",
						"          Product as string,",
						"          SalesValueUSD as string,",
						"          UnitsSold as string",
						"     ),",
						"     format: 'parquet',",
						"     partitionFileNames:['cleaned_.parquet_Practice2'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> SinkSilerderivedColumnpractice2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Sales_To_Silver_Parquet_Practice2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_practice')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DF_ds_Practice_xlsx",
								"type": "DatasetReference"
							},
							"name": "PracticexlsxtosqlTbl"
						},
						{
							"dataset": {
								"referenceName": "ds_Practice_ExchangeRate",
								"type": "DatasetReference"
							},
							"name": "PracticeExchangeRate"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sink_df_practice",
								"type": "DatasetReference"
							},
							"name": "sinksqlPractice"
						}
					],
					"transformations": [
						{
							"name": "filterpractice"
						},
						{
							"name": "filterExchangeRatePractice"
						},
						{
							"name": "xlsxcurrencylookuppractice"
						},
						{
							"name": "selectDSPractice"
						},
						{
							"name": "derivedColumnPractice"
						},
						{
							"name": "selectTargetPractice"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Period as date,",
						"          Product as string,",
						"          {Unit Price} as double,",
						"          Currency as string,",
						"          {Units Sold} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PracticexlsxtosqlTbl",
						"source(output(",
						"          FromCurrency as string,",
						"          ToCurrency as string,",
						"          Date as date,",
						"          ExchangeRate as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PracticeExchangeRate",
						"PracticexlsxtosqlTbl filter(Product!='Month Total') ~> filterpractice",
						"PracticeExchangeRate filter(ToCurrency=='USD') ~> filterExchangeRatePractice",
						"filterpractice, filterExchangeRatePractice lookup(Period == Date",
						"     && Currency == FromCurrency,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> xlsxcurrencylookuppractice",
						"xlsxcurrencylookuppractice select(mapColumn(",
						"          Product,",
						"          {Unit Price},",
						"          {Units Sold},",
						"          ToCurrency,",
						"          Date,",
						"          ExchangeRate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectDSPractice",
						"selectDSPractice derive(SalesValueUSD = round({Unit Price}*{Units Sold}*ExchangeRate,2)) ~> derivedColumnPractice",
						"derivedColumnPractice select(mapColumn(",
						"          Product,",
						"          {Unit Price},",
						"          {Units Sold},",
						"          Date,",
						"          ExchangeRate,",
						"          SalesValueUSD",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectTargetPractice",
						"selectTargetPractice sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinksqlPractice"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DF_ds_Practice_xlsx')]",
				"[concat(variables('factoryId'), '/datasets/ds_Practice_ExchangeRate')]",
				"[concat(variables('factoryId'), '/datasets/sink_df_practice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_xlsx_to_sqlTbl')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_xlsx_Source_Dataflow",
								"type": "DatasetReference"
							},
							"name": "JollyGoodxlsx"
						},
						{
							"dataset": {
								"referenceName": "ds_xlsx_Currency_DataFlow",
								"type": "DatasetReference"
							},
							"name": "CurrencyConversionToDollars"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_Sink_DF",
								"type": "DatasetReference"
							},
							"name": "SinkTosqlTable"
						}
					],
					"transformations": [
						{
							"name": "filterMonthTotal"
						},
						{
							"name": "ConvertCurrencyToUSD"
						},
						{
							"name": "LookupCurrencyUSD"
						},
						{
							"name": "derivedColumnTotal"
						},
						{
							"name": "SelectTargetColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Period as date,",
						"          Product as string,",
						"          {Unit Price} as double,",
						"          Currency as string,",
						"          {Units Sold} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> JollyGoodxlsx",
						"source(output(",
						"          FromCurrency as string,",
						"          ToCurrency as string,",
						"          Date as date,",
						"          ExchangeRate as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CurrencyConversionToDollars",
						"JollyGoodxlsx filter(Product!='Month Total') ~> filterMonthTotal",
						"CurrencyConversionToDollars filter(ToCurrency==\"USD\") ~> ConvertCurrencyToUSD",
						"filterMonthTotal, ConvertCurrencyToUSD lookup(Period == Date",
						"     && Currency == FromCurrency,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookupCurrencyUSD",
						"LookupCurrencyUSD derive(TotalAmountUSD = round({Unit Price}*{Units Sold}*ExchangeRate, 2)) ~> derivedColumnTotal",
						"derivedColumnTotal select(mapColumn(",
						"          Product,",
						"          {Unit Price},",
						"          {Units Sold},",
						"          Date,",
						"          ExchangeRate,",
						"          TotalAmountUSD",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectTargetColumn",
						"SelectTargetColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Product,",
						"          {Unit Price},",
						"          {Units Sold},",
						"          Date,",
						"          ExchangeRate,",
						"          TotalAmountUSD",
						"     )) ~> SinkTosqlTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_xlsx_Source_Dataflow')]",
				"[concat(variables('factoryId'), '/datasets/ds_xlsx_Currency_DataFlow')]",
				"[concat(variables('factoryId'), '/datasets/ds_Sink_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_NBN_Parameterized')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Practice2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ItenMane(NBN)": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging_unzipped_data/Azure-Data-Factory-datasets.zip/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/NaughtyButNice",
						"fileSystem": "bcdataengrgcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesValueUSD",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Practice2')]"
			]
		}
	]
}